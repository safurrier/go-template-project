repos:
  # Go formatting and linting using local system commands (matches CI)
  - repo: local
    hooks:
      # Format code with gofumpt (same as CI)
      - id: go-fmt
        name: Format Go code
        entry: make
        language: system
        args: [fmt]
        types: [go]
        pass_filenames: false

      # Static analysis with go vet
      - id: go-vet
        name: Go vet
        entry: bash
        language: system
        args: [-c, "CGO_ENABLED=0 go vet ./..."]
        pass_filenames: false

      # Linting with golangci-lint (same as CI)
      - id: golangci-lint
        name: golangci-lint
        entry: make
        language: system
        args: [lint]
        types: [go]
        pass_filenames: false

      # Note: go test excluded due to NAS /tmp execution restrictions
      # Tests run in CI where execution permissions are available

      # Mod tidy
      - id: go-mod-tidy
        name: Go mod tidy
        entry: go
        language: system
        args: [mod, tidy]
        pass_filenames: false

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      # General file checks
      - id: check-yaml
      - id: check-json
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: check-merge-conflict
      - id: check-case-conflict

  # Commit message validation
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v4.8.3
    hooks:
      - id: commitizen
        stages: [commit-msg]
